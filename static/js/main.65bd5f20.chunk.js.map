{"version":3,"sources":["logo.svg","Component/Card-component/card.Component.jsx","Component/card-list/card-list.jsx","Component/search-object/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","e","setState","searched","target","value","state","fetch","then","response","json","users","this","filtered","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAAe,I,kCCEFA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,0BAA+DC,IAAI,YAC3E,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCHPC,EAAW,SAAAC,GAAK,OAEzB,qBAAKP,UAAU,YAAf,SAEQO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCNtBQ,G,OAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBAAOZ,UAAU,SAChBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCAG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAYHH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,SAASF,EAAEG,OAAOC,SAZhC,EAAKC,MAAQ,CACVb,SAAS,GACTU,SAAS,IAJA,E,qDAQd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAASkB,S,oBAKvC,WACE,MAAyBC,KAAKN,MAAxBb,EAAN,EAAMA,SAASU,EAAf,EAAeA,SACTU,EAASpB,EAASqB,QACtB,SAAA9B,GAAO,OAAEA,EAAQK,KAAK0B,cAAcC,SAASb,EAASY,kBACxD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBACvBC,aAAce,KAAKf,eACpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA1BTI,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.65bd5f20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\nexport const Card = ({ monster }) => (\r\n    <div className='card-container'>\r\n        <img src={`https://robohash.org/${monster.id}?set=set2&size=180x180` } alt=\"monster\"/>\r\n        <h2>{monster.name}</h2>\r\n        <p>{monster.email}</p>\r\n    </div>\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './card-list.css';\r\nimport { Card } from '../Card-component/card.Component'\r\nexport const CardList = props => (\r\n\r\n    <div className='card-list'>\r\n        {\r\n            props.monsters.map(monster => (\r\n                <Card key={monster.id} monster={monster} />\r\n            ))\r\n\r\n        }\r\n\r\n    </div>\r\n\r\n);","import React from 'react';\r\nimport './search-style.css';\r\nexport const SearchBox=({placeholder,handlechange})=>(\r\n    <input className='search'\r\n     type='search' \r\n     placeholder={placeholder} \r\n     onChange={handlechange}/>\r\n);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { render } from '@testing-library/react';\nimport { Button } from 'reactstrap';\nimport { CardList } from './Component/card-list/card-list';\nimport { SearchBox } from './Component/search-object/search-box';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n       monsters:[],\n       searched:''\n       \n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(users=>this.setState({monsters:users}));\n  }\n handlechange=(e)=>{\n   this.setState({searched:e.target.value})\n }\n  render() {\n    const{monsters,searched}=this.state;\n    const filtered=monsters.filter(\n      monster=>monster.name.toLowerCase().includes(searched.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search Monester' \n        handlechange={this.handlechange}/>\n       <CardList monsters={filtered}></CardList>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}